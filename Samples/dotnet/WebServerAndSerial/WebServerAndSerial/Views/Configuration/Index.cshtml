@model WebServerAndSerial.Models.AppConfiguration

@{
    ViewData["Title"] = "Configuration";
}

<h1>Infrared, signals and switches configuration.</h1>
<div>
    @Html.ActionLink("See trains configuration", "Index", "Train")
    <br/>
    @Html.ActionLink("See switches configuration", "Index", "Switch")
    <br />
    @Html.ActionLink("See signals configuration", "Index", "Signal")
</div>
<div>
    <hr />
    <dl class="row">
        <div>
            Lego Infrared configuration seems
            @{
                if (Model.LegoInfrared == null)
                {
                    <b>not valid.</b>
                }
                else
                {
                    <b>valid.</b>
                }
            }
        </div>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.InfraredSpiBusNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.InfraredSpiBusNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.InfraredSpiChipSelect)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.InfraredSpiChipSelect)
        </dd>
        <hr />
        <div>
            Signal configuration seems
            @{
                if (Model.SignalManagement == null)
                {
                    <b>not valid.</b>
                }
                else
                {
                    <b>valid.</b>
                }
            }
        </div>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SignalSpiBusNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SignalSpiBusNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SignalSpiChipSelect)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SignalSpiChipSelect)
        </dd>
        <hr />
        <div>
            Switch configuration seems
            @{
                if (Model.SwitchManagement == null)
                {
                    <b>not valid.</b>
                }
                else
                {
                    <b>valid.</b>
                }
            }
        </div>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SwitchMultiplexPins)
        </dt>
        <dd class="col-sm-10">
            @{
                if (Model.SwitchMultiplexPins != null && Model.SwitchMultiplexPins.Length != 0)
                {
                    int i = 0;
                    foreach (var item in Model.SwitchMultiplexPins)
                    {
                        i++;
                        <li>Pin @i: @item</li>
                    }
                }
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SwitchMinimumDuration)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SwitchMinimumDuration)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SwitchMaximumDuration)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SwitchMaximumDuration)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SwitchPwmChip)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SwitchPwmChip)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SwitchPwmChannel)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SwitchPwmChannel)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ })
</div>
